/** 考试任务：那些班、那些课程参加考试 */

    /** 考试任务Id */ private Integer autoId    ;
    /** 考试批次Id */ private Integer batId     ;
    /** 课程Id     */ private Integer couId     ;
    /** 班级Id     */ private Integer claId     ;
    /** 拆班系数   */ private Byte    split     ; //就是考试时，学生要拆分到不同考场考试，默认1(不拆分)
    /** 绑定教室   */ private Byte    bindRoom  ; //1绑定(默认)、2不绑定
    /** 考生人数   */ private Short   examStuNum;
    /** 考卷Id     */ private Integer paperId   ;
    /** 备注       */ private String  remark    ;
    /** 记录状态   */ private Byte    state     ; // 2正常(默认)、3关闭、4历史
    /** 课程编号   */ private String  couNO     ;
    /** 课程名称   */ private String  couName   ;
    /** 班级类型   */ private Byte    claType   ;
    /** 班级编号   */ private String  claNO     ;
    /** 班级名称   */ private String  claName   ;
    /** 年级代码   */ private Integer grade     ;
    /** 专业代码   */ private Integer major     ;
    /** 校区Id     */ private Integer camId     ;
    /** 学部Id     */ private Integer depId     ;
    /** 教室Id     */ private Integer claRomId  ;

    /** 排序字段         */ private String[] orderFd  ; //排序字段的名称，倒序前面加“@”，可以多个
    /** 教师任课Id(批量) */ private int[]    thrCouIds;

    //==================================================================================================================
    // 查询
    //------------------------------------------------------------------------------------------------------------------
    /**<pre>
     *   功能：查询
     * 使用者：
     *
     * URL：examTask!query.action
     *
     * 参数
     * start       可选   记录开始位置
     * limit       可选   获取记录数量
     * autoId      可选   考试任务Id
     * batId       可选   考试批次Id
     * couId       可选   课程Id
     * claId       可选   班级Id
     * split       可选   拆班系数
     * bindRoom    可选   绑定教室 1绑定(默认)、2不绑定
     * examStuNum  可选   考生人数
     * paperId     可选   考卷Id
     * remark      可选   备注
     * state       可选   记录状态  2正常(默认)、3关闭、4历史
     * orderFd     可选   排序字段的字段名称，倒序前面加“@”
     *
     * 出错返回：{"success":false,"type":1或2,"message":"错误信息"} 1已知错误、2未知错误
     * 正确返回：{"success":true,"total":"总记录数","dataList":[ExamTask]}
     *
     */

    //==================================================================================================================
    // 查询2 -- 详细信息
    //------------------------------------------------------------------------------------------------------------------
    /**<pre>
     *   功能：查询2 -- 详细信息
     * 使用者：教师
     *
     * URL：examTask!query2.action
     *
     * 参数
     * start       可选   记录开始位置
     * limit       可选   获取记录数量
     * autoId      可选   考试任务Id
     * batId       可选   考试批次Id
     * couId       可选   课程Id
     * claId       可选   班级Id
     * split       可选   拆班系数
     * bindRoom    可选   绑定教室 1绑定(默认)、2不绑定
     * examStuNum  可选   考生人数
     * paperId     可选   考卷Id
     * remark      可选   备注
     * state       可选   记录状态  2正常(默认)、3关闭、4历史
     * couNO       可选   课程编号
     * couName     可选   课程名称
     * claType     可选   班级类型
     * claNO       可选   班级编号
     * claName     可选   班级名称
     * grade       可选   年级代码
     * major       可选   专业代码
     * camId       可选   校区Id
     * depId       可选   学部Id
     * claRomId    可选   教室Id
     * orderFd     可选   排序字段的字段名称，倒序前面加“@”
     * rtnThrInf   可选   1=返回教师信息，默认不返回教师信息
     *
     * 出错返回：{"success":false,"type":1或2,"message":"错误信息"} 1已知错误、2未知错误
     * 正确返回：{"success":true,"total":"总记录数","dataList":[V_ExamTask]}
     *
     */

    //==================================================================================================================
    // 新增
    //------------------------------------------------------------------------------------------------------------------
    /**<pre>
     *   功能：新增
     * 使用者：高级用户
     *
     * URL：examTask!newRec.action
     *
     * 参数
     * batId       必需   考试批次Id
     * couId       必需   课程Id
     * claId       必需   班级Id
     * split       可选   拆班系数
     * bindRoom    可选   绑定教室 1绑定(默认)、2不绑定
     * paperId     可选   考卷Id
     * remark      可选   备注
     * state       可选   记录状态  2正常(默认)、3关闭、4历史
     * thrCouIds   可选   关联任课信息(多个)
     *
     * 出错返回：{"success":false,"type":1或2,"message":"错误信息"} 1已知错误、2未知错误
     * 正确返回：{"success":true,"data":{ExamTask}}
     *
     */

    //==================================================================================================================
    // 由“任课Id”创建考试任务(覆盖追加)
    //------------------------------------------------------------------------------------------------------------------
    /**<pre>
     *   功能：由“任课Id”创建考试任务(覆盖追加)
     * 使用者：高级用户
     *
     * URL：examTask!createFromThrCou.action
     *
     * 参数
     * batId       必需   考试批次Id
     * thrCouIds   可选   教师任课Id(批量)，没有指定，将为所有教师任课创建考试任务
     *
     * 出错返回：{"success":false,"type":1或2,"message":"错误信息"} 1已知错误、2未知错误
     * 正确返回：{"success":true,"message":成功信息}
     *
     */

    //==================================================================================================================
    // 修改
    //------------------------------------------------------------------------------------------------------------------
    /**<pre>
     *   功能：修改
     * 使用者：高级用户
     *
     * URL：examTask!edit.action
     *
     * 参数
     * autoId      必需   考试任务Id
     * batId       可选   考试批次Id
     * couId       可选   课程Id
     * claId       可选   班级Id
     * split       可选   拆班系数
     * bindRoom    可选   绑定教室 1绑定(默认)、2不绑定
     * paperId     可选   考卷Id -1代表删除考卷设置
     * remark      可选   备注
     * state       可选   记录状态  2正常(默认)、3关闭、4历史
     *
     * 出错返回：{"success":false,"type":1或2,"message":"错误信息"} 1已知错误、2未知错误
     * 正确返回：{"success":true,"message":"成功信息"}
     *
     */

    //==================================================================================================================
    // 删除
    //------------------------------------------------------------------------------------------------------------------
    /**<pre>
     *   功能：删除
     * 使用者：高级用户
     *
     * URL：examTask!del.action
     *
     * 参数
     * autoId    必需   考试任务Id
     *
     * 出错返回：{"success":false,"type":1或2,"message":"错误信息"} 1已知错误、2未知错误
     * 正确返回：{"success":true,"message":"成功信息"}
     *
     */

    //==================================================================================================================
